<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dyw.auth.db.mapper.SysRoleHierarchyMapper">

    <resultMap id="BaseResultMap" type="cn.dyw.auth.db.domain.SysRoleHierarchy">
            <result property="ancestorRoleCode" column="ancestor_role_code" />
            <result property="descendantRoleCode" column="descendant_role_code" />
            <result property="depth" column="depth" />
    </resultMap>
    
    <insert id="savaRoleHierarchy">
        INSERT INTO sys_role_hierarchy (ancestor_role_code, descendant_role_code, depth)
        SELECT ancestor_role_code, #{roleCode}, depth + 1 
        FROM sys_role_hierarchy
        WHERE descendant_role_code = #{parentRoleCode}
        UNION ALL
        SELECT #{roleCode}, #{roleCode}, 0;
    </insert>

    <insert id="updateRoleParentHierarchy">
        insert into sys_role_hierarchy(ancestor_role_code, descendant_role_code, depth)
        select t1.ancestor_role_code,
               t2.descendant_role_code,
               t1.depth + t2.depth as depth
        from (SELECT ancestor_role_code, depth + 1 as depth
              FROM sys_role_hierarchy h1
              WHERE descendant_role_code = #{parentRoleCode}) t1
                 join (select h1.descendant_role_code, depth
                       from sys_role_hierarchy h1
                       where ancestor_role_code = #{roleCode}) t2
    </insert>
    
    <update id="updateRoleHierarchyToParent">
        update sys_role_hierarchy h1
            join
            (select descendant_role_code
             from sys_role_hierarchy t1
             where t1.ancestor_role_code = #{roleCode}
               and t1.depth != 0)
                t2 on t2.descendant_role_code = h1.descendant_role_code
        set depth = depth - 1
        where h1.ancestor_role_code != #{roleCode}
          and h1.depth != 0
    </update>


    <delete id="deleteRoleHierarchy">
        delete from sys_role_hierarchy
        where ancestor_role_code = #{roleCode} 
           or descendant_role_code = #{roleCode}
    </delete>
    
    <delete id="deleteRoleParentHierarchy">
        delete h1
        from sys_role_hierarchy h1
                 join (select descendant_role_code
                       from sys_role_hierarchy
                       where ancestor_role_code = #{roleCode}) t1 on h1.descendant_role_code = t1.descendant_role_code
                 join (select ancestor_role_code
                       from sys_role_hierarchy
                       where descendant_role_code = #{roleCode}) t3 on h1.ancestor_role_code = t3.ancestor_role_code
        where h1.ancestor_role_code != #{roleCode}
          and h1.depth != 0;
    </delete>
</mapper>
